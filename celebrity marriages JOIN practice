CREATE TABLE celebrities (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, best_known_for TEXT);

INSERT INTO celebrities (name, best_known_for) VALUES ("Jesse Plemons", "actor");
INSERT INTO celebrities (name, best_known_for) VALUES ("Kirsten Dunst", "actor");
INSERT INTO celebrities (name, best_known_for) VALUES ("Kourtney Kardashian", "reality TV");
INSERT INTO celebrities (name, best_known_for) VALUES ("Travis Barker", "musician");
INSERT INTO celebrities (name, best_known_for) VALUES ("Blake Lively", "actor");
INSERT INTO celebrities (name, best_known_for) VALUES ("Ryan Reynolds", "actor");
INSERT INTO celebrities (name, best_known_for) VALUES ("John Legend", "musician");
INSERT INTO celebrities (name, best_known_for) VALUES ("Chrissy Teigen", "model");
INSERT INTO celebrities (name, best_known_for) VALUES ("Gwyneth Paltrow", "actor");
INSERT INTO celebrities (name, best_known_for) VALUES ("Brad Falchuk", "writer");


CREATE TABLE marriages (id INTEGER PRIMARY KEY AUTOINCREMENT, person1_id INTEGER, person2_id INTEGER);

INSERT INTO marriages (person1_id, person2_id) VALUES (1,2);
INSERT INTO marriages (person1_id, person2_id) VALUES (3,4);
INSERT INTO marriages (person1_id, person2_id) VALUES (5,6);
INSERT INTO marriages (person1_id, person2_id) VALUES (7,8);
INSERT INTO marriages (person1_id, person2_id) VALUES (9, 10);
    
    
    
CREATE TABLE celeb_marriages (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, best_known_for TEXT, partner_id INTEGER);

INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Jesse Plemons", "actor", 2);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Kirsten Dunst", "actor", 1);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Kourtney Kardashian", "reality TV", 4);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Travis Barker", "musician", 3);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Blake Lively", "actor", 6);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Ryan Reynolds", "actor", 5);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("John Legend", "musician", 8);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Chrissy Teigen", "model", 7);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Jo Koy", "comedian", NULL);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Gwyneth Paltrow", "actor", 11);
INSERT INTO celeb_marriages (name, best_known_for, partner_id) VALUES ("Brad Falchuk", "writer", 10);

--display celebrities and who they're married to by joining the celebrities table to the marriages table.

SELECT a.name AS celebrity, b.name AS famous_spouse FROM marriages
    JOIN celebrities a
    ON marriages.person1_id = a.id
    JOIN celebrities b
    ON marriages.person2_id = b.id;
    
    
--display celebrities and who they're married to by joining the celeb_marriages table to itself - even display unmarried celebrities.

SELECT celeb_marriages.name AS celebrity, a.name AS famous_spouse FROM celeb_marriages
    LEFT OUTER JOIN celeb_marriages a
    ON celeb_marriages.id = a.partner_id;
    
    
--display celebrities and who they're married to alongside what they're best known for and what their spouses are best known for.

SELECT a.name AS celebrity, a.best_known_for, b.name AS their_spouse, b.best_known_for AS spouse_best_known_for FROM marriages
    JOIN celebrities a
    ON marriages.person1_id = a.id
    JOIN celebrities b
    ON marriages.person2_id = b.id;
    

--display only celebrities and spouses who are both actors 

SELECT a.name, b.name FROM marriages
    JOIN celebrities a
    ON marriages.person1_id = a.id
    JOIN celebrities b
    ON marriages.person2_id = b.id
    WHERE a.best_known_for = "actor" AND b.best_known_for = "actor"
